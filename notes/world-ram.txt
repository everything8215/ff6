$0000-$00FF direct page
-----------
   +$00 always #$0000
   +$02 always #$FFFF
   +$04 unmodified buttons pressed this frame
   +$06 buttons pressed this frame modified based on button config
   +$08 buttons pressed this frame but not last frame
   +$0A -
   +$0C buttons pressed last frame
        axlr----
        a: A button down
        x: X button down
        l: L button down
        r: R button down
        byetudlr
        b: B button down
        y: Y button down
        e: Select button down
        t: Start button down
        u: Up direction down
        d: Down direction down
        l: Left direction down
        r: Right direction down

    $19 exit world map

   +$1C destination xy position
   +$1E -------- -adhosri
          a: disable altitude change
          d: disable direction change
          h: disable horizon change
          o: disable bg2 offset-per-tile scrolling
          s: disable bg2 h-scroll for backdrop
          r: disable vehicle rotation
          i: disable vehicle input
   +$20 movement type
          0: ???
          1: airship
          2: chocobo
          3: no vehicle
          4: serpent trench
    $22 target screen brightness
    $23 current screen brightness (0-F)
   +$24 vblank flag
   +$26 forward movement speed
    $28 -
  ++$29 rotation speed
    $2C
   +$2D vertical movement speed
   +$2F altitude
   +$31 frame counter for vector approach
 +++$33 current X position
 +++$37 current Y position
    $3B -
 +++$3C horizontal offset for scrolling
 +++$40 vertical offset for scrolling
   +$44 vram address for vertically scrolling tilemap dma at vblank
   +$46 vram address for horizontally scrolling tilemap dma at vblank

$58-$64 scratchpad

    $60 flr?????
        f: vehicle is moving forward
        l: double speed left turns (L button)
        r: double speed right turns (R button)
    $61 b???dulr
        b: vehicle is moving backward
        d: vehicle is moving down
        u: vehicle is moving up
        l: vehicle is turning left
        r: vehicle is turning right

   +$6A scratchpad

   +$70 bg2 h-scroll position

   +$73 vehicle direction ???
   +$75 vehicle direction ???
   +$77 bg1 horizontal scroll
   +$79 bg1 vertical scroll
   +$7B horizontal offset of rotation center
   +$7D vertical rotation offset of rotation center

   +$81
   +$83 backdrop rotation amount
   +$85 horizon location
   +$87 number of scanlines below backdrop area
   +$89
   +$8B zoom level ???
   +$8D
   +$8F
   +$91 zoom level (unused ???)
   +$93
   +$95
   +$97
   +$99
   +$9B cosine of vehicle direction
   +$9D sine of vehicle direction
$9F-$A5 HDMA table #4 (M7A)
$A6-$AC HDMA table #5 (M7B)
$AD-$B3 HDMA table #6 (M7C)
$B4-$BA HDMA table #7 (M7D)
$BB-$C1 HDMA table #1 (bg2 h-scroll)
    $C2 ?bfpssac current tile properties, byte 1
        b: enable battles
        f: forest
        p: passable on foot
        s: airship shadow size
        a: airship can land
        c: passable with chocobo
    $C3 kpv??bbb current tile properties, byte 2
        k: kefka's tower
        p: phoenix cave
        v: veldt
        b: battle background
   +$C4 current tile index
   +$C6 current X position (in pixels)
   +$C8 current Y position (in pixels)
   +$CA character 1 graphic
          00: none
          01: airship
          02: chocobo
          03: character
          04: serpent trench ???
          05: ship
          06: airship lifting off (1st part)
          07: airship lifting off (2nd part)
          08: airship landing (1st part)
          09: airship landing (2nd part)
          0A: getting off chocobo (1st part)
          0B: getting off chocobo (2nd part)
          0C: esper terra (init)
          0D: esper terra
          12: bird (init)
          13: bird
          16: smoking airship
   +$CC character 2 graphic
   +$CE character 3 graphic
   +$D0 character 4 graphic
  ++$D2 decompression source address
  ++$D5 decompression destination address
   +$D8 decompression source offset
    $DA decompression lzss run length
   +$DB decompression source length
   +$DD decompression buffer offset
   +$DF X position (in pixels * 256)
   +$E1 Y position (in pixels * 256)
   +$E3 X movement speed (signed)
   +$E5 Y movement speed (signed)
    $E7 ??st?wvc
        s: character/vehicle is shown
        t: character is transparent (bottom sprite, for forests)
        w: character/vehicle is moving/waiting
        v: vehicle event script is running
        c: world event script is running
    $E8 atvz?lsm
        a: disable all vblank updates
        t: airship is taking off
        v: disable all vram/ppu transfers at vblank
        z: eaten by zone eater
        l: arrows are not locked
        s: arrows are shown
        m: open menu ???
    $E9 ??????wf
        w: enable window hdma (channel #3)
        f: enable fixed color hdma (channel #2)
  ++$EA event script pointer
   +$ED event script offset (high bit does something)
    $EF movement distance/pause counter
    $F0 current event command
    $F1 frame counter for pause event command
    $F2
    $F3 character movement speed
   +$F4 destination map index ???
    $F6 facing direction (0 = up, 1 = right, 2 = down, 3 = left)
    $F7 graphical action
    $F8 -
    $F9 -
    $FA 4 frame counter (magitek train ride)
   +$FA origin X
   +$FC origin Y
    $FE
    $FF poison mosaic counter
-----------
$0100-$01FF used by battle graphics module
$0200-$02FF used by menu module
$0300-$09FF mode 7 HDMA data
$0A00-$0AFF dp stack
$0B00-$0B0F doom gaze positions, first two are used (4 * 4 bytes)
              +$0B00 x position in 4 tile increments (0 to 31)
              +$0B02 y position in 4 tile increments (0 to 31)

-----------
      $11F0 mosaic speed for poison

      $11F2
      $11F3
     +$11F4 airship altitude
     +$11F6 ???????? ?????gbm
            g: map graphics are already loaded
            b: enable battle
            m: hide mini-map
      $11F8
      $11F9 battle bg index
      $11FA vehicle index (0 = none, 1 = airship, 2 = chocobo)
      $11FB showing character's graphic index
      $11FC showing character's palette index
    ++$11FD world map event pointer

     +$1F64 map index

     +$1F60 character XY position (in tiles)
     +$1F62 airship XY position (in tiles)
     +$1F64 map index
     +$1F66 map XY position
      $1F68 facing direction (bit 7 does something too)
     +$1F69 parent map index
     +$1F6B parent XY position
      $1F6D random number
     +$1F6E random battle counter
$1F70-$1F7F saved character palette indexes
      $1F80 current song index
$1F81-$1FA0 saved object map indexes
      $1FA1 random number pointer for random monster battle
      $1FA2 random number pointer for monster formation
      $1FA3 random number counter for monster formation
      $1FA4 random number counter for random monster battle
      $1FA5
     +$1FA6 pointer to current showing character's object data
$1FA8-$1FBF saved counter data
     +$1FC0 party XY position
$1FC2-$1FD1 event words
     +$1FCE number of dragons left
      $1FD2 parent map facing direction
$1FD3-$1FF2 character saved XY positions (2 bytes each)
$1FF3-$1FF6 party facing directions
$1FF7-$1FFD -
     +$1FFE SRAM checksum
-----------
$2000-$3FFF 128x128 tilemap buffer
$6000-$6006 fixed color hdma table (channel #2)
$6007-$6206 fixed color hdma data
$6207-$620D window position scroll hdma table (channel #3)
$620E-      window position scroll hdma data

$690E-$6B0D bg2 h-scroll hdma data (for backdrop)
$6B0E-$6B2D (12 * 4 bytes)
     +$6B2E animation counter for vector approach (2432 frames)
$6B30-$6D4F sprite data
              sprites 0-1: minimap position and direction indicator
              sprites 2-3: airship shadow
              sprites 4-19: 4x4 minimap
              sprites 20-51: animation sprites (player, vehicle, etc.)
              sprites 52-126: 15x5 gradient sprites (if in vehicle)
$6D50-$6E4F tilemap dma buffer for horizontal scrolling
$6E50-$6ECF tilemap dma buffer for vertical scrolling

$6F50-$734F map tileset
$7350-$934F map graphics (8x8 tiles)
$9350-$93DF map tile palette assignments

$93D0-$95CF pointers to animation frame data (from EE/573E)
$95D0-$B5CF animation frame data (from EE/5816)
$B5D0-$B64F animation data (16 * 8 bytes)
              +$B5D0 animation frame index
              +$B5D2 x position
              +$B5D4 y position
              +$B5D6
      $B650 walking animation position (0-3)

      $B652 airship animation counter

      $B654 airship propeller speed

$B660-$B67F (4 * 8 bytes)

$B750-$B84F water tile graphics
$B850-$B85F water tile movement counters (1 per line)
      $B860

$B862-$BC61 offset-per-tile data (32 * 32 bytes)
$BC62-

$BE62-$BEE1 bg palette red components
$BEF2-$BE61 bg palette green components
$BF62-$BFE1 bg palette blue components

$E000-$E200 color palettes

$F120-$F7FF saved $0520-$0BFF (from field module)
$F800-$FFFF decompression buffer
-----------
$7F0000-$7FFFFF world tilemap

magitek train ride
------------------

  ++$3A train rotation angle (high 16-bits active)
   +$3D m7a
   +$3F m7b
   +$41 m7c
   +$43 m7d

$7E2000-$7E9C44 tile graphics (29 items, 1097 bytes each)

$7F01E0-$7F02FF layer 16-21 tile data (6x12 items, 4 bytes each) bottom layer
$7F0300-$7F03BF layer 12-15 tile data (4x12 items, 4 bytes each)
$7F03C0-$7F041F layer 10-11 tile data (2x12 items, 4 bytes each)
$7F0420-$7F047F layer 8-9 tile data (2x12 items, 4 bytes each)
$7F0480-$7F04DF layer 6-7 tile data (2x12 items, 4 bytes each)
$7F04E0-$7F050F layer 5 tile data (1x12 items, 4 bytes each)
$7F0510-$7F053F layer 4 tile data (1x12 items, 4 bytes each)
$7F0540-$7F056F layer 3 tile data (1x12 items, 4 bytes each)
$7F0570-$7F059F layer 2 tile data (1x12 items, 4 bytes each)
$7F05A0-$7F05CF layer 1 tile data (1x12 items, 4 bytes each)
$7F05D0-$7F05FF layer 0 tile data (1x12 items, 4 bytes each) top layer
---------------
            $00 x position
            $01 y position
           +$02 tile index (pointer to tile pointers at $0800, $0198-$0318 are $0000-$0180 flipped horizontally)

$7F0800-$7F0AB7 pointers to magitek train ride tiles at $7E2000
                copied from D8/DD00 (29 items, 24 bytes each, +$7E0000)
$7F0AB8-
$7F0AF8-
$7F0B38-        pitch data 1
$7F0B78-        pitch data 2
$7F0BB8-        yaw data
$7F0BF8-        yaw multiplier data
$7F0C18-        background data

       +$7F0C5C pointer to tile data

$7F9618-$7FE617 magitek train ride graphics buffer (80 * 256(80) bytes each)
                only the first 80 bytes are used

VRAM
----
$0000-$3FFF bg1 graphics (8 bpp)
$4000-$43FF bg1 tilemap
$4400-$4BFF bg2 tilemap
$4C00-$4FFF bg3 tilemap (for offset-per-tile)
$5000-$5FFF bg2 graphics (backdrop)
$6000-$7FFF sprite graphics (4 bpp)
